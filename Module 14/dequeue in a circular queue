# Queue Dequeue Operation

---

### AIM
Implement the dequeue operation in a circular queue using arrays in C.

---

### ALGORITHM
1. Check if the queue is empty by calling `isEmpty()`.
2. If empty, print "Queue is empty" and return -1.
3. Otherwise, retrieve the element at the `front` index.
4. If the queue contains only one element (`front == rear`), reset `front` to 1 and `rear` to -1.
5. Else, update `front` to `(front + 1) % SIZE` to move forward in circular fashion.
6. Return the dequeued element.

---

### PROGRAM

```c
#include <stdio.h>
#define SIZE 5

int items[SIZE];
int front = -1, rear = -1;

int isEmpty() {
    return front == -1;
}

int deQueue() {
    int element;
    if (isEmpty()) {
        printf("Queue is empty\n");
        return -1;
    } else {
        element = items[front];
        if (front == rear) {
            front = 1;
            rear = -1;
        } else {
            front = (front + 1) % SIZE;
        }
        return element;
    }
}
### OUTPUT
(Add output screenshot here)

### RESULT
The program correctly performs the dequeue operation on a circular queue, including handling the empty queue scenario.
